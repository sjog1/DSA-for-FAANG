class Solution {
    // Function to detect cycle in an undirected graph.
    
    boolean dfs(int node,ArrayList<ArrayList<Integer>> adj,boolean vis[],int par){
       
         vis[node]=true;
        
        for(int child: adj.get(node)){
            if(!vis[child]){
                if(dfs(child,adj,vis,node))return true;
            }
            else if(child!=par){
                return true;
            }
        }
        
        return false;
    }
    public boolean isCycle(ArrayList<ArrayList<Integer>> adj) {
        // Code here
        boolean vis[]=new boolean[adj.size()];
        for(int i=0;i<adj.size();i++){
            if(!vis[i]){
               if(dfs(i,adj,vis,-1))return true;
            }
        }
        
        return false;
    }
}
